"""
web_prep.py
01/16/22
Contributors: Levi Purdy

This script is used to prepare the obsidian markdown notes for web publication.
It is intended to be run from the command line.

Some code may have been generated by OpenAI's davinci-codex.
"""

import os
import glob
import re
import shutil

"""
Code gen prompt:
1. Create a list of all markdown (.md) files contained in a folder recursively using glob
2. Find all wikilinks in the markdown files (text sorunded by double brackets ex: [[link]]) and
    a. replace all " " with "_"
    b. remove special characters: special_chars=[",","(",")","'"]
3. Rename all the markdown files following the same rules as the wikilinks
4. Save all the markdown files in a new folder with no subfolders (flat directory structure)
"""

def fix_markdown_doc_filenames_and_structure(save_dir):
    # 1. Create a list of all markdown (.md) files contained in a folder recursively using glob
    md_files = glob.glob("../**/*.md", recursive=True)

    # 2. Find all wikilinks in the markdown files (text sorunded by double brackets ex: [[link]]) and
    #    a. replace all " " with "_"
    #    b. remove special characters: special_chars=[",","(",")","'"]
    for file in md_files:
        with open(file, 'r') as f:
            text = f.read()
            # turns out subbing for spaces in the wikilink is not necessary because mkdocs takes care of that
            # text = re.sub(r'\[\[(.*?)\]\]', lambda m: m.group(0).replace(" ", "_"), text)
            text = re.sub(r'[,()\'$]', '', text)
            # 3. Rename all the markdown files following the same rules as the wikilinks
            new_name = file.replace(" ", "_")
            new_name = new_name.replace("(", "")
            new_name = new_name.replace(")", "")
            new_name = new_name.replace(",", "")
            new_name = new_name.replace("'", "")
            new_name = new_name.replace("$", "")
            new_name = new_name.replace("__", "_")
            # grab just the filename
            new_name = new_name.split("/")[-1]
            new_name = save_dir + "/" + new_name
            # 4. Save all the markdown files in a new folder with no subfolders (flat directory structure)
            with open(new_name, 'w') as nf:
                nf.write(text)


def main():
    md_files_directory = "md_files"
    # clear all files in the md_files directory
    if os.path.exists(md_files_directory):
        shutil.rmtree(md_files_directory)
    os.mkdir(md_files_directory)
    # fix the filenames and structure of the markdown files
    fix_markdown_doc_filenames_and_structure(md_files_directory)


if __name__ == "__main__":
    main()